name: CI/CD rn_boilerplate

on:
  workflow_dispatch:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
    paths:
      - .github/workflows/app.yaml
      - .github/workflows/report.yaml
    types:
      - opened
      - synchronize
      - reopened

jobs:
  lint-and-test:
    name: Lints, Tests
    # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-12-Readme.md
    runs-on: macos-12
    strategy:
      matrix:
        node-version: [18.x]
    env:
      REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Cache '.npm' to speed up clean-install when package-lock.json is updated.
      # Loosened up the restore-keys a bit, as it doesn't have to match the contents of package-lock.json exactly.
      - name: Cache .npm
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          # If cache is corrupted, increment prefixed number.
          key: 1-${{ runner.os }}-rn_boilerplate-npm-${{ hashFiles('./**/package-lock.json') }}
          restore-keys: |
            1-${{ runner.os }}-rn_boilerplate-npm-

      # If package-lock.json matches, node_modules will also match.
      # So, cache node_modules directly to skip install step.
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          # If cache is corrupted, increment prefixed number.
          key: 1-${{ runner.os }}-rn_boilerplate-node-modules-${{ hashFiles('./**/package-lock.json') }}

      - name: Set up reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Test
        if: always()
        run: |
          npm run -s test
